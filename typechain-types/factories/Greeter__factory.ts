/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Greeter, GreeterInterface } from "../Greeter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "greeting",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "GreetingSet",
    type: "event",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000a1238038062000a128339818101604052810190620000379190620001b5565b80600090805190602001906200004f92919062000093565b507f87088e8d584add0eabedbfa636050842740322d971a69e07097205f2b9f3b91b816000604051620000849291906200024c565b60405180910390a1506200042a565b828054620000a1906200034f565b90600052602060002090601f016020900481019282620000c5576000855562000111565b82601f10620000e057805160ff191683800117855562000111565b8280016001018555821562000111579182015b8281111562000110578251825591602001919060010190620000f3565b5b50905062000120919062000124565b5090565b5b808211156200013f57600081600090555060010162000125565b5090565b60006200015a6200015484620002a9565b62000280565b9050828152602081018484840111156200017357600080fd5b6200018084828562000319565b509392505050565b600082601f8301126200019a57600080fd5b8151620001ac84826020860162000143565b91505092915050565b600060208284031215620001c857600080fd5b600082015167ffffffffffffffff811115620001e357600080fd5b620001f18482850162000188565b91505092915050565b620002058162000305565b82525050565b60006200021882620002df565b620002248185620002ea565b93506200023681856020860162000319565b620002418162000419565b840191505092915050565b600060408201905081810360008301526200026881856200020b565b9050620002796020830184620001fa565b9392505050565b60006200028c6200029f565b90506200029a828262000385565b919050565b6000604051905090565b600067ffffffffffffffff821115620002c757620002c6620003ea565b5b620002d28262000419565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b60006200031282620002fb565b9050919050565b60005b83811015620003395780820151818401526020810190506200031c565b8381111562000349576000848401525b50505050565b600060028204905060018216806200036857607f821691505b602082108114156200037f576200037e620003bb565b5b50919050565b620003908262000419565b810181811067ffffffffffffffff82111715620003b257620003b1620003ea565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6105d8806200043a6000396000f3fe6080604052600436106100295760003560e01c8063a41368621461002e578063cfae32171461005f575b600080fd5b610048600480360381019061004391906102cb565b61008a565b604051610056929190610399565b60405180910390f35b34801561006b57600080fd5b5061007461012e565b6040516100819190610377565b60405180910390f35b606060006103e83410156100d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ca906103c9565b60405180910390fd5b82600090805190602001906100e99291906101c0565b507f87088e8d584add0eabedbfa636050842740322d971a69e07097205f2b9f3b91b834760405161011b929190610399565b60405180910390a1824791509150915091565b60606000805461013d906104a7565b80601f0160208091040260200160405190810160405280929190818152602001828054610169906104a7565b80156101b65780601f1061018b576101008083540402835291602001916101b6565b820191906000526020600020905b81548152906001019060200180831161019957829003601f168201915b5050505050905090565b8280546101cc906104a7565b90600052602060002090601f0160209004810192826101ee5760008555610235565b82601f1061020757805160ff1916838001178555610235565b82800160010185558215610235579182015b82811115610234578251825591602001919060010190610219565b5b5090506102429190610246565b5090565b5b8082111561025f576000816000905550600101610247565b5090565b60006102766102718461040e565b6103e9565b90508281526020810184848401111561028e57600080fd5b610299848285610465565b509392505050565b600082601f8301126102b257600080fd5b81356102c2848260208601610263565b91505092915050565b6000602082840312156102dd57600080fd5b600082013567ffffffffffffffff8111156102f757600080fd5b610303848285016102a1565b91505092915050565b60006103178261043f565b610321818561044a565b9350610331818560208601610474565b61033a81610568565b840191505092915050565b600061035260148361044a565b915061035d82610579565b602082019050919050565b6103718161045b565b82525050565b60006020820190508181036000830152610391818461030c565b905092915050565b600060408201905081810360008301526103b3818561030c565b90506103c26020830184610368565b9392505050565b600060208201905081810360008301526103e281610345565b9050919050565b60006103f3610404565b90506103ff82826104d9565b919050565b6000604051905090565b600067ffffffffffffffff82111561042957610428610539565b5b61043282610568565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b82818337600083830152505050565b60005b83811015610492578082015181840152602081019050610477565b838111156104a1576000848401525b50505050565b600060028204905060018216806104bf57607f821691505b602082108114156104d3576104d261050a565b5b50919050565b6104e282610568565b810181811067ffffffffffffffff8211171561050157610500610539565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f53656e64206174206c656173742031206b57656900000000000000000000000060008201525056fea26469706673582212209bb488068ae19d6676ed060b29600e32f905ebcf1d9e884e81390919fab5264264736f6c63430008010033";

type GreeterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreeterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Greeter__factory extends ContractFactory {
  constructor(...args: GreeterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Greeter";
  }

  deploy(
    _greeting: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Greeter> {
    return super.deploy(_greeting, overrides || {}) as Promise<Greeter>;
  }
  getDeployTransaction(
    _greeting: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_greeting, overrides || {});
  }
  attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }
  static readonly contractName: "Greeter";
  public readonly contractName: "Greeter";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
