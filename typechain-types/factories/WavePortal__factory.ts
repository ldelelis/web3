/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WavePortal, WavePortalInterface } from "../WavePortal";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "NewWave",
    type: "event",
  },
  {
    inputs: [],
    name: "getWaves",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "waver",
            type: "address",
          },
          {
            internalType: "string",
            name: "message",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct WavePortal.Wave[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWavesCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "wave",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526200003360405180606001604052806025815260200162000f6a602591396200003960201b620004861760201c565b620001cd565b620000d98160405160240162000050919062000146565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050620000dc60201b60201c565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600062000112826200016a565b6200011e818562000175565b93506200013081856020860162000186565b6200013b81620001bc565b840191505092915050565b6000602082019050818103600083015262000162818462000105565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620001a657808201518184015260208101905062000189565b83811115620001b6576000848401525b50505050565b6000601f19601f8301169050919050565b610d8d80620001dd6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631f6e378614610046578063449d46c014610064578063a9d42f7e14610080575b600080fd5b61004e61009e565b60405161005b9190610a52565b60405180910390f35b61007e6004803603810190610079919061078e565b6100e9565b005b610088610335565b6040516100959190610979565b60405180910390f35b60006100e16040518060400160405280601781526020017f5765206861766520256420746f74616c2077617665732100000000000000000081525060005461051f565b600054905090565b60016000808282546100fb9190610b59565b925050819055506101426040518060400160405280601681526020017f257320776176656420772f206d6573736167652025730000000000000000000081525033836105bb565b600160405180606001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200183815260200142815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190610201929190610683565b506040820151816002015550503373ffffffffffffffffffffffffffffffffffffffff167f5f7e16dc676677766a70e9c5628aa6c54ddb8b6e5188e2ae1e1f17f1ffbea7164283604051610256929190610a6d565b60405180910390a26000655af3107a400090506102a86040518060400160405280600a81526020017f25732062616c616e6365000000000000000000000000000000000000000000008152504761051f565b4781106102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e190610a32565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610330573d6000803e3d6000fd5b505050565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561047d57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546103e290610c2d565b80601f016020809104026020016040519081016040528092919081815260200182805461040e90610c2d565b801561045b5780601f106104305761010080835404028352916020019161045b565b820191906000526020600020905b81548152906001019060200180831161043e57829003601f168201915b5050505050815260200160028201548152505081526020019060010190610359565b50505050905090565b61051c8160405160240161049a919061099b565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061065a565b50565b6105b78282604051602401610535929190610a02565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061065a565b5050565b6106558383836040516024016105d3939291906109bd565b6040516020818303038152906040527fe0e9ad4f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061065a565b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b82805461068f90610c2d565b90600052602060002090601f0160209004810192826106b157600085556106f8565b82601f106106ca57805160ff19168380011785556106f8565b828001600101855582156106f8579182015b828111156106f75782518255916020019190600101906106dc565b5b5090506107059190610709565b5090565b5b8082111561072257600081600090555060010161070a565b5090565b600061073961073484610ac2565b610a9d565b90508281526020810184848401111561075157600080fd5b61075c848285610beb565b509392505050565b600082601f83011261077557600080fd5b8135610785848260208601610726565b91505092915050565b6000602082840312156107a057600080fd5b600082013567ffffffffffffffff8111156107ba57600080fd5b6107c684828501610764565b91505092915050565b60006107db838361090b565b905092915050565b6107ec81610baf565b82525050565b6107fb81610baf565b82525050565b600061080c82610b03565b6108168185610b26565b93508360208202850161082885610af3565b8060005b85811015610864578484038952815161084585826107cf565b945061085083610b19565b925060208a0199505060018101905061082c565b50829750879550505050505092915050565b600061088182610b0e565b61088b8185610b37565b935061089b818560208601610bfa565b6108a481610d1d565b840191505092915050565b60006108ba82610b0e565b6108c48185610b48565b93506108d4818560208601610bfa565b6108dd81610d1d565b840191505092915050565b60006108f5601a83610b48565b915061090082610d2e565b602082019050919050565b600060608301600083015161092360008601826107e3565b506020830151848203602086015261093b8282610876565b9150506040830151610950604086018261095b565b508091505092915050565b61096481610be1565b82525050565b61097381610be1565b82525050565b600060208201905081810360008301526109938184610801565b905092915050565b600060208201905081810360008301526109b581846108af565b905092915050565b600060608201905081810360008301526109d781866108af565b90506109e660208301856107f2565b81810360408301526109f881846108af565b9050949350505050565b60006040820190508181036000830152610a1c81856108af565b9050610a2b602083018461096a565b9392505050565b60006020820190508181036000830152610a4b816108e8565b9050919050565b6000602082019050610a67600083018461096a565b92915050565b6000604082019050610a82600083018561096a565b8181036020830152610a9481846108af565b90509392505050565b6000610aa7610ab8565b9050610ab38282610c5f565b919050565b6000604051905090565b600067ffffffffffffffff821115610add57610adc610cee565b5b610ae682610d1d565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610b6482610be1565b9150610b6f83610be1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ba457610ba3610c90565b5b828201905092915050565b6000610bba82610bc1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610c18578082015181840152602081019050610bfd565b83811115610c27576000848401525b50505050565b60006002820490506001821680610c4557607f821691505b60208210811415610c5957610c58610cbf565b5b50919050565b610c6882610d1d565b810181811067ffffffffffffffff82111715610c8757610c86610cee565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4e6f206d6f7265206d6f6e657920746f2067697665206177617900000000000060008201525056fea2646970667358221220ddd9382db20a17756cebcf12e5a91e67f441d65af3ca54c47bec11eb3f945ac364736f6c63430008040033596f20796f2c204920616d206120636f6e747261637420616e64204920616d20736d617274";

type WavePortalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WavePortalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WavePortal__factory extends ContractFactory {
  constructor(...args: WavePortalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "WavePortal";
  }

  deploy(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<WavePortal> {
    return super.deploy(overrides || {}) as Promise<WavePortal>;
  }
  getDeployTransaction(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WavePortal {
    return super.attach(address) as WavePortal;
  }
  connect(signer: Signer): WavePortal__factory {
    return super.connect(signer) as WavePortal__factory;
  }
  static readonly contractName: "WavePortal";
  public readonly contractName: "WavePortal";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WavePortalInterface {
    return new utils.Interface(_abi) as WavePortalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WavePortal {
    return new Contract(address, _abi, signerOrProvider) as WavePortal;
  }
}
